/*
  Style Strategy: Mobile-first (Light mode only)
  - Base rules target mobile.
  - Larger breakpoints use @media (min-width: ...).
  - No dark mode. All colors assume white/light backgrounds.

  TODO(reduced-motion): Current skeleton uses keyframe animation and some transitions.
  Consider adding prefers-reduced-motion guards to disable animations/transitions
  for users who prefer less motion, and rename generic keyframes to a more specific
  name. Example fix:
    @media (prefers-reduced-motion: reduce) { .loadingSkeleton { animation: none; } }
*/

/* SCSS breakpoints and mixin */
$bp-sm: 480px;
$bp-md: 768px;
$bp-lg: 1024px;
@mixin up($bp) { @media (min-width: $bp) { @content; } }

// Container and layout
.container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.main {
  flex: 1;
  /* Container padding is handled by .contentPadding utility when needed */
  padding: 0;
  margin: 0 auto;
  width: 100%;

  @media (min-width: 768px) {
    padding: var(--page-padding-desktop);
  }
}

// Note: Header styles moved to app/components/site-header.module.scss
// This file now only contains grid and layout styles for the home page

.gridContainer {
  display: grid;
  /* Mobile base: single column */
  grid-template-columns: 1fr;
  gap: 1.5rem;
  margin-top: 0;
  margin-left: auto;
  margin-right: auto;

  /* Desktop version (enhancement): min-width 768px and up */
  @media (min-width: 768px) {
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
}

.gridSection {
  position: relative;
  /* Mobile base: square with simpler rendering */
  aspect-ratio: 1 / 1;
  overflow: hidden;
  cursor: pointer;
  text-decoration: none;
  color: inherit;

  // Disable parallax on mobile for performance
  transform-style: flat;
  perspective: none;

  @include up($bp-md) {
    aspect-ratio: 1.75 / 1;
    /* Re-enable 3D context for parallax on desktop */
    transform-style: preserve-3d;
    perspective: 800px;
  }
}

/* Detail variant for slug pages: no forced aspect ratio, fit content */
.slug_gridSection {
  position: relative;
  overflow: hidden;
  text-decoration: none;
  color: inherit;
  /* no aspect-ratio here so height fits image */
}

/* In detail variant, background should size to contain the full image without cropping */
.slug_gridBackground {
  position: relative;
  width: 100%;
  height: auto;
}

.blockImage {
  display: block;
  width: 100%;
  height: auto;
  object-fit: contain;
}

.gridBackground {
  position: absolute;
  /* Mobile base: use cover for better visibility */
  inset: 0;
  background-size: 160%;
  background-position: center center;
  background-repeat: no-repeat;
  /* Ensure background is visible */
  z-index: 1;
  /* Allow JS parallax transforms on desktop; keep none on mobile base */
  transform: none;
  // will-change: auto; // commented out per requirement; kept for potential revert

  @include up($bp-md) {
    top: -15%;
    bottom: -15%;
    background-size: cover;
    background-position: center;
    will-change: transform;
  }
}

/* Non-parallax background variant for slug/detail pages */
.gridBackgroundStatic {
  position: absolute;
  inset: 0;
  background-size: 100%;
  background-position: center center;
  background-repeat: no-repeat;
}

.gridContent {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  z-index: 2;
  pointer-events: none;
}

/* Header row for title; provides spacing without affecting the badge position */
.gridHeader {
  padding: var(--space-4);
  pointer-events: auto;

  //@include up($bp-md) {
  //  padding: var(--space-0);
  //}
}

.gridTitle {
  margin: 0;
  font-size: var(--text-xl);
  font-weight: 700;
  color: var(--color-fg);
  line-height: 1.1;

  @include up($bp-sm) {
    font-size: 1.8rem;
  }

  @include up($bp-md) {
    /* Remove padding from title; spacing handled by container */
    font-size: 2.5rem;
  }
}

.gridText {
  margin: 0;
  font-size: var(--text-sm);
  color: var(--color-fg);
  /* No default overlay/background; overlay usage is manual per block */
  padding: var(--space-2);
  border-radius: var(--radius-1);
  line-height: 1.5;
  max-width: 100%;

  @include up($bp-md) {
    font-size: var(--text-md);
    padding: var(--space-3);
    max-width: 80%;
  }
}

/* Old badge placement (magic numbers) - old
.cardTypeBadge { position: absolute; top: 0.5rem; right: 0.5rem; }
*/

/* New badge placement: container should be position: relative; */
.badgeContainer {
  position: relative;
}

/* Ensure badge aligns to the exact image edge by anchoring to the gridSection (position: relative) */

.cardTypeBadge {
  position: absolute;
  inset-block-start: 0;
  inset-inline-end: 0;
  background-color: rgba(0, 0, 0, 0.9);
  color: #ffffff;
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-xs);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-radius: var(--radius-0);
  pointer-events: auto;

  @include up($bp-md) {
    inset-block-start: 0;
    inset-inline-end: 0;
    font-size: 0.8rem;
  }
}

// Loading states
.loading {
  cursor: default;
}

.loadingSkeleton {
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: pageLoadingSkeleton 1.5s infinite;
  border-radius: var(--radius-2);
}

@keyframes pageLoadingSkeleton {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}


// Empty state
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  text-align: center;
  color: #666;

  h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
    color: #333;
  }

  p {
    font-size: 1.1rem;
    margin-bottom: 2rem;
  }
}

// Placeholder grid for empty state
.placeholderGrid {
  display: grid;
  /* Mobile base */
  grid-template-columns: 1fr;
  gap: 1rem;
  max-width: 1000px;
  width: 100%;

  /* Desktop version (enhancement): min-width 480px and up */
  @media (min-width: 480px) {
    grid-template-columns: repeat(2, 1fr);
  }

  /* Desktop version (enhancement): min-width 768px and up */
  @media (min-width: 768px) {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }
}

.placeholderCard {
  /* Mobile base */
  aspect-ratio: 1.2 / 1;
  background-color: #f5f5f5;
  border-radius: 8px;
  overflow: hidden;
  opacity: 0.6;

  /* Desktop version (enhancement): min-width 768px and up */
  @media (min-width: 768px) {
    aspect-ratio: 1.75 / 1;
  }
}

.placeholderImage {
  height: 70%;
  background-size: 20px 20px;
  background: linear-gradient(45deg, #e0e0e0 25%, transparent 25%) linear-gradient(-45deg, #e0e0e0 25%, transparent 25%) linear-gradient(45deg, transparent 75%, #e0e0e0 75%) linear-gradient(-45deg, transparent 75%, #e0e0e0 75%) 0 0, 0 10px, 10px -10px, -10px 0px;
}

.placeholderText {
  padding: 1rem;
  height: 30%;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.placeholderTitle {
  height: 1.2rem;
  background-color: #d0d0d0;
  border-radius: 4px;
  width: 80%;
}

.placeholderSubtitle {
  height: 0.8rem;
  background-color: #e0e0e0;
  border-radius: 4px;
  width: 60%;
}

/* Dark mode removed: light mode only per requirements */

/* ContentCollection page specific helpers */
.contentPadding {
  /* Mobile base: no padding */
  padding: 0;

  /* Desktop and up */
  @media (min-width: 768px) {
    padding: 2rem;
  }
}

.coverImage {
  width: 100%;
  display: flex;
  justify-content: center;
}

.coverImageTag {
  @extend .contentBlock;
  /* Cap width on larger screens to keep parity with grid visuals */
  @include up($bp-md) {
    max-width: 600px;
  }
}

/* Unified content block style used by images, text, code, gif blocks */
.contentBlock {
  width: 100%;
  height: auto;
  display: block;
  border-radius: var(--radius-0); /* images specifically: no rounded corners */
}

/* Image block retains same sizing */
.blockImage {
  @extend .contentBlock;
}

.blockGroup {
  margin-top: 4rem;
}
